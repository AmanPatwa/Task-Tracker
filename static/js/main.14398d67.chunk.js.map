{"version":3,"sources":["components/Button.js","components/Header.js","context.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","components/MidComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","onClick","style","backgroundColor","color","className","text","defaultProps","Header","location","useLocation","pathname","onAddShow","onShow","TaskContext","createContext","tasksArray","id","day","reminder","TaskProvider","useState","tasks","setTasks","useEffect","a","fetchTask","taskFromServer","getTask","fetch","res","json","data","Provider","value","children","Task","useContext","deleteTask","method","filter","task","toggleReminder","object","headers","body","JSON","stringify","response","map","task1","onDoubleClick","cursor","Tasks","index","AddTask","setText","setDay","setReminder","addTask","onSubmit","e","preventDefault","alert","htmlFor","type","onChange","target","placeholder","name","checked","currentTarget","Footer","to","About","MidComponent","length","App","showAdd","setshowAdd","path","exact","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14398d67.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = (props) => {\r\n\r\n    // const onClick = (e) => {\r\n    //     console.log('click');\r\n    // }\r\n\r\n    return (\r\n        <button onClick={props.onClick} style={{backgroundColor:props.color}} className='btn'>{props.text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'stealblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Button from './Button'\r\n\r\nconst Header = (props) => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>Task Tracker</h1>\r\n            {\r\n                location.pathname === '/' &&\r\n                <Button onClick={props.onAddShow} color={props.onShow ? 'red' : 'green'} text={props.onShow ? 'Close' : 'Add'} />\r\n            }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{createContext, useState,useEffect} from 'react'\r\n\r\n\r\n\r\nexport const TaskContext = createContext()\r\nconst tasksArray = [\r\n    {\r\n      id: 1,\r\n      text: 'Doctors Appointment',\r\n      day: 'Feb 5th at 2:30pm',\r\n      reminder: true\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Meeting at School',\r\n      day: 'Feb 6th at 2:30pm',\r\n      reminder: true\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'Food Shopping',\r\n      day: 'Feb 5th at 2:30pm',\r\n      reminder: false\r\n    }\r\n  ]\r\n\r\nexport const TaskProvider = (props) => {\r\n  const [tasks, setTasks] = useState(tasksArray)\r\n  useEffect(() => {\r\n    const getTask = async () => {\r\n      const taskFromServer = await fetchTask()\r\n      setTasks(taskFromServer)\r\n    }\r\n    getTask()\r\n  }, [])\r\n\r\n  const fetchTask = async () => {\r\n    const res = await fetch('http://localhost:5000/tasks')\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n    return (\r\n        <TaskContext.Provider value={[tasks,setTasks]}>\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\n\r\n// export const context\r\n\r\n","import React,{useContext} from 'react'\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport {TaskContext} from '../context'\r\n\r\nconst Task = (props) => {\r\n    const [tasks,setTasks] = useContext(TaskContext)\r\n    const deleteTask = async (id) => {\r\n        await fetch(`http://localhost:5000/tasks/${id}`, { method: 'DELETE' })\r\n    \r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n      }\r\n    \r\n      const toggleReminder = async (task) => {\r\n        // const task = await getTaskById(id)\r\n        const object = { ...task, reminder: !task.reminder }\r\n        const response = await fetch(`http://localhost:5000/tasks/${task.id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(object),\r\n        })\r\n        const data = await response.json()\r\n    \r\n        setTasks(tasks.map((task1) => task1.id === task.id ? { ...task1, reminder: data.reminder } : task1))\r\n      }\r\n    return (\r\n        <div className={`task ${props.task.reminder? 'reminder' : ''}`} onDoubleClick={()=> toggleReminder(props.task)}>\r\n            <h3>{props.task.text} <FaTimes style={{color:'red',cursor:'pointer'}} onClick={() => deleteTask(props.task.id)}/></h3>\r\n            <p>{props.task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React,{useContext} from 'react'\r\nimport Task from \"./Task\";\r\nimport {TaskContext} from '../context'\r\n\r\n\r\n\r\nconst Tasks = (props) => {\r\n    const [tasks,setTasks] = useContext(TaskContext)\r\n    return (\r\n        <>\r\n            <h3>My Task</h3>\r\n            {tasks.map((task,index) => (\r\n                <Task key={index} task={task}/>\r\n                \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState, useContext} from 'react'\r\nimport {TaskContext} from '../context'\r\n\r\nconst AddTask = (props) => {\r\n    const [tasks,setTasks] = useContext(TaskContext)\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!text || !day){\r\n            alert('Some field are missing')\r\n            return\r\n        }\r\n        addTask({text,day,reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    const addTask = async (task) => {\r\n        // const id = Math.floor(Math.random()*1000) +1\r\n    \r\n        const response = await fetch('http://localhost:5000/tasks', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(task),\r\n        })\r\n        const data = await response.json()\r\n        setTasks([...tasks, data])\r\n      }\r\n\r\n    return (\r\n\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label htmlFor=\"\">Task</label>\r\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder='Add Task' name=\"\" id=\"\" />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label htmlFor=\"\">Day & Time</label>\r\n                <input type=\"text\" value={day} onChange={(e) => setDay(e.target.value)} placeholder='Add Day & Time' name=\"\" id=\"\" />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label htmlFor=\"\">Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type=\"submit\" className='btn btn-block' value=\"Save Task\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React,{useContext} from 'react'\r\nimport { TaskContext } from '../context'\r\nimport Tasks from './Tasks'\r\n\r\nconst MidComponent = () => {\r\n    const [tasks,setTasks] = useContext(TaskContext)\r\n    return (\r\n        <>\r\n           {tasks.length > 0 ?\r\n              (<Tasks  />) :\r\n              (<h2>No task yet, Please add one</h2>)\r\n            } \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MidComponent\r\n","import { useState, useEffect, useContext } from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\nimport {TaskProvider,TaskContext} from './context'\nimport MidComponent from './components/MidComponent'\n// import Test from './components/Test'\n// import {} from './context'\n\n// const tasksArray = [\n//   {\n//     id: 1,\n//     text: 'Doctors Appointment',\n//     day: 'Feb 5th at 2:30pm',\n//     reminder: true\n//   },\n//   {\n//     id: 2,\n//     text: 'Meeting at School',\n//     day: 'Feb 6th at 2:30pm',\n//     reminder: true\n//   },\n//   {\n//     id: 3,\n//     text: 'Food Shopping',\n//     day: 'Feb 5th at 2:30pm',\n//     reminder: false\n//   }\n// ]\n\nfunction App() {\n  const [showAdd, setshowAdd] = useState(false)\n\n  // useEffect(() => {\n  //   const getTask = async () => {\n  //     const taskFromServer = await fetchTask()\n  //     setTasks(taskFromServer)\n  //   }\n  //   getTask()\n  // }, [])\n\n  // const fetchTask = async () => {\n  //   const res = await fetch('http://localhost:5000/tasks')\n  //   const data = await res.json()\n\n  //   return data\n  // }\n\n  // const deleteTask = async (id) => {\n  //   await fetch(`http://localhost:5000/tasks/${id}`, { method: 'DELETE' })\n\n  //   setTasks(tasks.filter((task) => task.id !== id))\n  // }\n\n  // const getTaskById = async (id) => {\n  //   const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  //   const data = await res.json()\n\n  //   return data\n\n  // }\n\n  // const toggleReminder = async (id) => {\n  //   const task = await getTaskById(id)\n  //   const object = { ...task, reminder: !task.reminder }\n  //   const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify(object),\n  //   })\n  //   const data = await response.json()\n\n  //   setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n  // }\n\n  // const addTask = async (task) => {\n  //   // const id = Math.floor(Math.random()*1000) +1\n\n  //   const response = await fetch('http://localhost:5000/tasks', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify(task),\n  //   })\n  //   const data = await response.json()\n  //   setTasks([...tasks, data])\n  // }\n\n  return (\n\n    <TaskProvider>\n    <Router>\n      <div className=\"container\">\n        <Header onAddShow={() => setshowAdd(!showAdd)} onShow={showAdd} />\n        \n        <Route path='/' exact render={(props) => (\n          <>\n            {showAdd && <AddTask />}\n            <MidComponent/>\n          </>\n        )}>\n\n        </Route>\n        <Route path='/about' component={About}></Route>\n        {/* <Route path='/test' component={Test}></Route> */}\n        <Footer />\n      </div>\n    </Router>\n    </TaskProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}